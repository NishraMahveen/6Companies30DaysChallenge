class Solution:
    def equalSubstring(self, s: str, t: str, maxCost: int) -> int:
        n = len(s)

        # Declaring a prefix array.
        prefixSum = [0] * (n + 1)

        # Variable to store the maximum length.
        sol = 0

        # Filling the prefix array.
        for i in range(1, n + 1):
            prefixSum[i] = prefixSum[i - 1] + abs(ord(s[i - 1]) - ord(t[i - 1]))

        j = 0

        # To find the maximum length.
        for i in range(1, n + 1):
            while (prefixSum[i] - prefixSum[j]) > maxCost:
                j += 1

            # Update the maximum length
            sol = max(sol, i - j)

        return sol
