class Solution:
    def maxSubarrayLength(self, nums: List[int], k: int) -> int:
        n = len(nums)
        dict = {}  # Dictionary to store the frequency of each element in the current window

        i = 0
        j = 0
        ans = 0  # Variable to store the maximum length of the subarray

        while j < n:
            # Update the frequency of the current element in the window
            dict[nums[j]] = dict.get(nums[j], 0) + 1

            # Adjust the window to ensure the subarray sum is less than or equal to k
            while dict[nums[j]] > k:
                dict[nums[i]] -= 1
                i += 1

            # Update the maximum length of the subarray
            ans = max(ans, j - i)

            # Move the window to the right
            j += 1

        # Return the maximum subarray length + 1 (to include the last element)
        return ans + 1



        
